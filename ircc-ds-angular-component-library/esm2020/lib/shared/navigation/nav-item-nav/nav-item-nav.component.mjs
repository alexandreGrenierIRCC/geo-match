import { Input, ViewChild } from '@angular/core';
import { Component } from '@angular/core';
import { Subscription, filter } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../navigation.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "../../icon/icon.component";
import * as i5 from "../../indicator/indicator.component";
import * as i6 from "@ngx-translate/core";
//TODO: Fix class name (NavItemNavComponent)
export class navItemNavComponent {
    constructor(renderer, navEvent, cdr) {
        this.renderer = renderer;
        this.navEvent = navEvent;
        this.cdr = cdr;
        //TODO: Pattern is supposed to be that any elements that may not be used should be OPTIONAL
        this.config = {
            id: '',
            href: '',
            anchor: '',
            external: false,
            border: false,
            label: '',
            iconLeading: '',
            iconTrailing: '',
            type: 'link',
            children: [],
            header: false
        };
        this.id = '';
        this.indicatorConfig = {
            category: 'weak',
            purpose: 'status',
            type: 'dot',
            tabIndex: -1
        };
        this.headerConfig = {
            iconLeading: '',
            id: 'header_link',
            label: 'Header Title',
            type: 'heading',
            children: []
        };
        this.navObjectChangeSub = new Subscription();
    }
    ngOnInit() {
        //Used entirely as a workaround for the change detection limitations
        this.navObjectChangeSub = this.navEvent.itemChangeObs$
            .pipe(filter((item) => item === this.config.id))
            .subscribe(() => {
            this.indicatorConfig.status = this.config.indicator?.status;
            this.indicatorConfig.icon = this.config.indicator?.icon;
        });
        this.id !== '' ? (this.config.id = this.id) : undefined;
        if (this.config.indicator) {
            this.indicatorConfig = {
                type: 'dot',
                category: 'weak',
                purpose: 'status',
                status: this.config.indicator.status,
                icon: this.config.indicator.icon,
                tabIndex: -1
            };
            this.config.indicator.label
                ? (this.indicatorConfig = {
                    ...this.indicatorConfig,
                    type: 'text',
                    label: this.config.indicator.label,
                    tabIndex: -1
                })
                : null;
            this.size
                ? (this.indicatorConfig = { ...this.indicatorConfig, size: this.size })
                : null;
        }
        this.size !== undefined ? (this.config.size = this.size) : undefined;
    }
    linkClick(e) {
        this.navEvent.navEvent({ id: this.config.id, event: e }); //Broadcast the event
        if (!this.config.external) {
            setTimeout(() => {
                if (this.config?.anchor) {
                    const anchorElement = this.renderer.selectRootElement(`#${this.config.anchor}`, true);
                    anchorElement
                        ? anchorElement.scrollIntoView({ behavior: 'smooth' })
                        : null;
                }
            }, 0);
        }
    }
    enterPress(event) {
        if (this.config.external) {
            this.externalLinkA?.nativeElement.click();
        }
        else {
            this.internalLink?.nativeElement.click();
        }
    }
}
navItemNavComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: navItemNavComponent, deps: [{ token: i0.Renderer2 }, { token: i1.NavigationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
navItemNavComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: navItemNavComponent, selector: "ircc-cl-lib-nav-item", inputs: { config: "config", id: "id", size: "size", indicator: "indicator" }, viewQueries: [{ propertyName: "externalLinkA", first: true, predicate: ["externalLinkA"], descendants: true }, { propertyName: "internalLink", first: true, predicate: ["internalLink"], descendants: true }], ngImport: i0, template: "<div\n  tabindex=\"1\"\n  [id]=\"config.id\"\n  class=\"lib-nav-item\"\n  [ngClass]=\"config?.border ? 'border-left' : null\"\n  (keydown.enter)=\"enterPress($event)\"\n>\n  <div>\n    <ng-container *ngIf=\"config?.external !== true; else externalLink\">\n      <a\n        [routerLink]=\"config?.href || '' | translate\"\n        [fragment]=\"config?.anchor\"\n        [routerLinkActive]=\"'active-link'\"\n        (click)=\"linkClick($event)\"\n        #internalLink\n      >\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconLeading\"\n          class=\"icon-left\"\n          [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n        ></ircc-cl-lib-icon>\n        <p *ngIf=\"config?.header !== true\">\n          {{ config?.label || '' | translate }}\n        </p>\n        <h2\n          *ngIf=\"config?.header === true\"\n          class=\"h5\"\n        >\n          {{ config?.label || '' | translate }}\n        </h2>\n        <!-- <ircc-cl-lib-nav-header\n          [attr.size]=\"config.size\"\n          [size]=\"config.size\"\n          [label]=\"\"\n          *ngIf=\"config?.header === true\"\n        >\n        </ircc-cl-lib-nav-header> -->\n        <ircc-cl-lib-indicator\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.indicator\"\n          [config]=\"indicatorConfig\"\n        ></ircc-cl-lib-indicator>\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconTrailing\"\n          class=\"icon-trailing\"\n          [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n        ></ircc-cl-lib-icon>\n      </a>\n    </ng-container>\n    <ng-template #externalLink>\n      <a\n        #externalLinkA\n        target=\"_blank\"\n        [attr.href]=\"\n          config?.href + (config?.anchor ? '#' + config.anchor : '') || ''\n            | translate\n        \"\n      >\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconLeading\"\n          class=\"icon-left\"\n          [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n        ></ircc-cl-lib-icon>\n        <p>{{ config?.label || '' | translate }} {{ config.size }}</p>\n        <ircc-cl-lib-indicator\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.indicator\"\n          [config]=\"indicatorConfig\"\n        ></ircc-cl-lib-indicator>\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconTrailing\"\n          class=\"icon-trailing\"\n          [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n        ></ircc-cl-lib-icon>\n      </a>\n    </ng-template>\n  </div>\n  <div>\n    <ng-content></ng-content>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i3.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "component", type: i4.IconComponent, selector: "ircc-cl-lib-icon", inputs: ["config", "ariaLabel", "FA_keywords", "size"] }, { kind: "component", type: i5.IndicatorComponent, selector: "ircc-cl-lib-indicator", inputs: ["config", "size", "type", "icon", "category", "purpose", "status", "palette", "ariaLabel", "tabIndex"] }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }], preserveWhitespaces: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: navItemNavComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ircc-cl-lib-nav-item', template: "<div\n  tabindex=\"1\"\n  [id]=\"config.id\"\n  class=\"lib-nav-item\"\n  [ngClass]=\"config?.border ? 'border-left' : null\"\n  (keydown.enter)=\"enterPress($event)\"\n>\n  <div>\n    <ng-container *ngIf=\"config?.external !== true; else externalLink\">\n      <a\n        [routerLink]=\"config?.href || '' | translate\"\n        [fragment]=\"config?.anchor\"\n        [routerLinkActive]=\"'active-link'\"\n        (click)=\"linkClick($event)\"\n        #internalLink\n      >\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconLeading\"\n          class=\"icon-left\"\n          [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n        ></ircc-cl-lib-icon>\n        <p *ngIf=\"config?.header !== true\">\n          {{ config?.label || '' | translate }}\n        </p>\n        <h2\n          *ngIf=\"config?.header === true\"\n          class=\"h5\"\n        >\n          {{ config?.label || '' | translate }}\n        </h2>\n        <!-- <ircc-cl-lib-nav-header\n          [attr.size]=\"config.size\"\n          [size]=\"config.size\"\n          [label]=\"\"\n          *ngIf=\"config?.header === true\"\n        >\n        </ircc-cl-lib-nav-header> -->\n        <ircc-cl-lib-indicator\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.indicator\"\n          [config]=\"indicatorConfig\"\n        ></ircc-cl-lib-indicator>\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconTrailing\"\n          class=\"icon-trailing\"\n          [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n        ></ircc-cl-lib-icon>\n      </a>\n    </ng-container>\n    <ng-template #externalLink>\n      <a\n        #externalLinkA\n        target=\"_blank\"\n        [attr.href]=\"\n          config?.href + (config?.anchor ? '#' + config.anchor : '') || ''\n            | translate\n        \"\n      >\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconLeading\"\n          class=\"icon-left\"\n          [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n        ></ircc-cl-lib-icon>\n        <p>{{ config?.label || '' | translate }} {{ config.size }}</p>\n        <ircc-cl-lib-indicator\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.indicator\"\n          [config]=\"indicatorConfig\"\n        ></ircc-cl-lib-indicator>\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconTrailing\"\n          class=\"icon-trailing\"\n          [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n        ></ircc-cl-lib-icon>\n      </a>\n    </ng-template>\n  </div>\n  <div>\n    <ng-content></ng-content>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i1.NavigationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { externalLinkA: [{
                type: ViewChild,
                args: ['externalLinkA', { static: false }]
            }], internalLink: [{
                type: ViewChild,
                args: ['internalLink', { static: false }]
            }], config: [{
                type: Input
            }], id: [{
                type: Input
            }], size: [{
                type: Input
            }], indicator: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,